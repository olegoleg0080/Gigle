{"mappings":"AACA,MAAMA,EAAWC,SAASC,iBAAiB,qBACxBD,SAASE,cAAc,qBAE/BC,iBAAiB,SAASC,IACpCA,EAAMC,iBAENC,OAAOC,SAAS,CACfC,IAAK,EACLC,SAAU,UACT,IAGHV,EAASW,SAAQC,IAChBA,EAAKR,iBAAiB,SAASC,IAC9BA,EAAMC,iBAEN,MAAMO,EAAYD,EAAKE,aAAa,QAEpC,GAAID,GAA2B,MAAdA,EAAmB,CACnC,MAEME,EAFUd,SAASE,cAAcU,GAEPG,UAEhCT,OAAOC,SAAS,CACfC,IAAKM,GAAkB,IACvBL,SAAU,U,IAGX,IC7BY,IAAIO,OAAO,oBAAqB,CAC3CC,SAAU,CACNC,MAAO,IACPC,sBAAsB,GAE1BC,cAAe,OACfC,gBAAgB,EAChBC,aAAc,GACdC,MAAM,EACNC,aAAc,KCTL,CACTC,QAASzB,SAASE,cAAc,UAChCwB,SAAU1B,SAASE,cAAc,oBACjCyB,WAAY3B,SAASE,cAAc,gBACnC0B,UAAW5B,SAASE,cAAc,oBAClC2B,aAAc7B,SAASE,cAAc,iBACrC4B,IAAK9B,SAASE,cAAc,UAG3B4B,IAAI3B,iBAAiB,SAAS4B,IAC/B,MAAMN,EAAUM,EAAEC,OAAOC,QAAQ,UACjC,GAAIR,EAAS,CACT,MAAMC,EAAWD,EAAQvB,cAAc,oBACjCyB,EAAaF,EAAQvB,cAAc,gBACrCwB,EAASQ,UAAUC,SAAS,WAC5BT,EAASQ,UAAUE,OAAO,UAC1BX,EAAQS,UAAUE,OAAO,UACzBT,EAAWO,UAAUE,OAAO,YAE5BV,EAASQ,UAAUG,IAAI,UACvBZ,EAAQS,UAAUG,IAAI,UACtBV,EAAWO,UAAUG,IAAI,U,KCnBrC/B,OAAOH,iBAAiB,QAExB,WACC,SAASmC,EAAkBC,GAC1B,IAAIC,EAAiBD,GAElBvC,SAASC,iBAAiB,yBACzBuC,GACHA,EAAe9B,SAAQ+B,KAMzB,SAA+BA,GAC9B,IAAIC,EAAiB,KACrB,MAAMC,EAAWC,SAASH,EAAcI,QAAQJ,eAC7CG,SAASH,EAAcI,QAAQJ,eAC/B,IACGK,EAAaF,SAASH,EAAcM,WACpCC,EAAgB,EAChBC,EAAOC,IACPR,IAAgBA,EAAiBQ,GACtC,MAAMC,EAAWC,KAAKC,KAAKH,EAAYR,GAAkBC,EAAU,GACnEF,EAAcM,UAAYK,KAAKE,MAC9BH,GAAYH,EAAgBF,IACzB,iBACAK,EAAW,GACd7C,OAAOiD,sBAAsBN,EAAK,EAG9B3C,OAAOiD,sBAAsBN,E,CAtBjCO,CAAsBf,EAAc,G,CA2BpC,IAGIgB,EAAW,IAAIC,sBAAqB,CAACC,EAASC,KAC9CD,EAAQjD,SAAQmD,IAEZ,GAAIA,EAAMC,eAAgB,CACtB,MAAMC,EAAgBF,EAAM7B,OACtBO,EAAsBwB,EAAc9D,iBAAiB,yBACxDsC,EAAoByB,QACnB1B,EAAkBC,GAGtBqB,EAASK,UAAUF,E,IAEzB,GAfQ,CACVG,WAAY,KAgBZC,EAAWnE,SAASC,iBAAiB,WACrCkE,EAASH,QACTG,EAASzD,SAAQ0D,IACbX,EAASY,QAAQD,EAAS,G","sources":["src/js/header.js","src/js/swiper.js","src/js/spoiler.js","src/js/recall.js"],"sourcesContent":["// Получаем все ссылки в навигационном меню\nconst navLinks = document.querySelectorAll('.nav-menu__item a');\nconst headerLink = document.querySelector('a[href=\"#header\"]');\n\nheaderLink.addEventListener('click', event => {\n\tevent.preventDefault();\n\n\twindow.scrollTo({\n\t\ttop: 0,\n\t\tbehavior: 'smooth',\n\t});\n});\n\nnavLinks.forEach(link => {\n\tlink.addEventListener('click', event => {\n\t\tevent.preventDefault();\n\n\t\tconst sectionId = link.getAttribute('href');\n\n\t\tif (sectionId && sectionId !== '#') {\n\t\t\tconst section = document.querySelector(sectionId);\n\n\t\t\tconst sectionPosition = section.offsetTop;\n\n\t\t\twindow.scrollTo({\n\t\t\t\ttop: sectionPosition + -100,\n\t\t\t\tbehavior: 'smooth',\n\t\t\t});\n\t\t}\n\t});\n});\n","const swiper = new Swiper('.swiper-container', {\n    autoplay: {\n        delay: 5000,\n        disableOnInteraction: false,\n    },\n    slidesPerView: 'auto',\n    centeredSlides: true,\n    spaceBetween: 50,\n    loop: true,\n    loopedSlides: 3,\n});\n\n","const refs = {\n    spoiler: document.querySelector('.sItem'),\n    subtitle: document.querySelector('.sItem__subtitle'),\n    spoilerSvg: document.querySelector('.spoiler-svg'),\n    spoilerJs: document.querySelector('.item-spoiler-js'),\n    spoilerTitle: document.querySelector('.sItem__title'),\n    faq: document.querySelector('.FAQ'),\n};\n\nrefs.faq.addEventListener('click', e => {\n    const spoiler = e.target.closest('.sItem');\n    if (spoiler) {\n        const subtitle = spoiler.querySelector('.sItem__subtitle');\n        const spoilerSvg = spoiler.querySelector('.spoiler-svg');\n        if (subtitle.classList.contains('active')) {\n            subtitle.classList.remove('active');\n            spoiler.classList.remove('active');\n            spoilerSvg.classList.remove('active');\n        } else {\n            subtitle.classList.add('active');\n            spoiler.classList.add('active');\n            spoilerSvg.classList.add('active');\n        }\n    }\n});\n","\"use strict\";\n\nwindow.addEventListener('load', windiwLoad);\n\nfunction windiwLoad() {\n\tfunction digitsCounterInit(digitsCountersItems) {\n\t\tlet digitsCounters = digitsCountersItems\n\t\t\t? digitsCountersItems\n\t\t\t: document.querySelectorAll('[data-digits-counter]');\n\t\tif (digitsCounters) {\n\t\t\tdigitsCounters.forEach(digitsCounter => {\n\t\t\t\tdigitsCountersAnimate(digitsCounter);\n\t\t\t});\n\t\t}\n\t}\n\t// *animate\n\tfunction digitsCountersAnimate(digitsCounter) {\n\t\tlet startTimestamp = null;\n\t\tconst duration = parseInt(digitsCounter.dataset.digitsCounter)\n\t\t\t? parseInt(digitsCounter.dataset.digitsCounter)\n\t\t\t: 1000;\n\t\tconst startValue = parseInt(digitsCounter.innerHTML);\n\t\tconst startPosition = 0;\n\t\tconst step = timestamp => {\n\t\t\tif (!startTimestamp) startTimestamp = timestamp;\n\t\t\tconst progress = Math.min((timestamp - startTimestamp) / duration, 1);\n\t\t\tdigitsCounter.innerHTML = Math.floor(\n\t\t\t\tprogress * (startPosition + startValue)\n\t\t\t) + `<span>+</span>`;\n\t\t\tif (progress < 1) {\n\t\t\t\twindow.requestAnimationFrame(step);\n\t\t\t}\n\t\t};\n        window.requestAnimationFrame(step);\n\t}\n    // * load\n    // digitsCounterInit()\n\n    let options = {\n        threshhold: 0.3\n    }\n    let observer = new IntersectionObserver((entries, observer) => {\n        entries.forEach(entry => {\n            \n            if (entry.isIntersecting) {\n                const targetElement = entry.target;\n                const digitsCountersItems = targetElement.querySelectorAll('[data-digits-counter]');\n                if(digitsCountersItems.length){\n                    digitsCounterInit(digitsCountersItems);\n                }\n                // * вимкнути слежку\n                observer.unobserve(targetElement);\n            }\n        });\n    }, options);\n    let sections = document.querySelectorAll('.recall');\n    if (sections.length) {\n        sections.forEach(sections => {\n            observer.observe(sections);\n        });\n    }\n}\n"],"names":["$8aad853c076397e7$var$navLinks","document","querySelectorAll","querySelector","addEventListener","event","preventDefault","window","scrollTo","top","behavior","forEach","link","sectionId","getAttribute","sectionPosition","offsetTop","Swiper","autoplay","delay","disableOnInteraction","slidesPerView","centeredSlides","spaceBetween","loop","loopedSlides","spoiler","subtitle","spoilerSvg","spoilerJs","spoilerTitle","faq","e","target","closest","classList","contains","remove","add","digitsCounterInit","digitsCountersItems","digitsCounters","digitsCounter","startTimestamp","duration","parseInt","dataset","startValue","innerHTML","startPosition","step","timestamp","progress","Math","min","floor","requestAnimationFrame","digitsCountersAnimate","observer1","IntersectionObserver","entries","observer","entry","isIntersecting","targetElement","length","unobserve","threshhold","sections1","sections","observe"],"version":3,"file":"index.51142a15.js.map"}